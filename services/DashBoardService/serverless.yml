service:
  name: KracknowDashBoardService

# Add the serverless-webpack plugin
plugins:
  - serverless-offline
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs12.x
  environment: ${file(../../env/${self:provider.stage}.yml)}
  stage: ${opt:stage, 'dev'}
  profile: kracknow
  region: ap-south-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource:
        - "*"
  apiGateway:
    restApiId:
      "Fn::ImportValue": ${self:provider.stage}-kracknow-ApiGatewayRestApiId
    restApiRootResourceId:
      "Fn::ImportValue": ${self:provider.stage}-kracknow-ApiGatewayRestApiRootResourceId

functions:
  Dashboard:
    handler: lambda.handler
    events:
      - http:
          path: "/dashboard"
          method: "ANY"
          cors: ${file(../../env/cors.yml)}
          authorizer:
            type: CUSTOM
            authorizerId: !ImportValue ${self:provider.stage}-kracknow-ApiGatewayAuthorizer
      - http:
          path: "/dashboard/{proxy+}"
          method: "ANY"
          cors: ${file(../../env/cors.yml)}
          authorizer:
            type: CUSTOM
            authorizerId: !ImportValue ${self:provider.stage}-kracknow-ApiGatewayAuthorizer
