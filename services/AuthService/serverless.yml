service:
  name: KracknowAuthService

# Add the serverless-webpack plugin
plugins:
  - serverless-offline
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs14.x
  environment: ${file(../../env/${self:provider.stage}.yml)}
  stage: ${opt:stage, 'prod'}
  region: ap-south-1
  iamRoleStatements: 
    - Effect: 'Allow'
      Action: 
        - 'ses:SendEmail'
        - 'ses:SendRawEmail'
      Resource: 
        - '*'
    - Effect: 'Allow'
      Action: 
        - 'sns:Publish'
      Resource: 
        - '*'

functions:
  sessions:
    handler: lambda.handler
    events:
    
      - http:
          path: '/sessions'
          method: 'any'
          cors: ${file(../../env/cors.yml)}
      - http:
          path: '/sessions/{proxy+}'
          method: 'any'
          cors: ${file(../../env/cors.yml)}      
         
resources:  
  Outputs:
      apiGatewayRestApiId:
        Value:
          Ref: ApiGatewayRestApi
        Export:
          Name: ${self:provider.stage}-kracknow-ApiGatewayRestApiId
      apiGatewayRestApiRootResourceId:
        Value:
          Fn::GetAtt:
            - ApiGatewayRestApi
            - RootResourceId 
        Export:
          Name: ${self:provider.stage}-kracknow-ApiGatewayRestApiRootResourceId