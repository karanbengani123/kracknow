service:
  name: KracknowStudentService

# Add the serverless-webpack plugin
plugins:
  - serverless-offline
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs14.x
  environment: ${file(../../env/${self:provider.stage}.yml)}
  stage: ${opt:stage, 'prod'}
  region: ap-south-1
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'ses:SendEmail'
        - 'ses:SendRawEmail'
      Resource:
        - '*'
    - Effect: 'Allow'
      Action:
        - 'sns:Publish'
      Resource:
        - '*'
  apiGateway:
    restApiId:
      'Fn::ImportValue': ${self:provider.stage}-kracknow-ApiGatewayRestApiId
    restApiRootResourceId:
      'Fn::ImportValue': ${self:provider.stage}-kracknow-ApiGatewayRestApiRootResourceId

functions:
  students:
    handler: lambda.handler
    events:
      - http:
          path: '/students'
          method: 'ANY'
          cors: ${file(../../env/cors.yml)}
          authorizer:
            type: CUSTOM
            authorizerId: !ImportValue ${self:provider.stage}-kracknow-ApiGatewayAuthorizer
      - http:
          path: '/students/{proxy+}'
          method: 'ANY'
          cors: ${file(../../env/cors.yml)}
          authorizer:
            type: CUSTOM
            authorizerId: !ImportValue ${self:provider.stage}-kracknow-ApiGatewayAuthorizer
